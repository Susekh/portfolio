{"mappings":"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","sources":["script.js"],"sourcesContent":["let isNavOpen = false;\r\n\r\n// portable navbar btn\r\nconst navBtn = document.querySelector(\".nav-btn\");\r\nconst moreBtn = document.querySelectorAll(\".more-projects-div > button\");\r\nconst navHam = document.querySelector(\".ri-menu-line\");\r\nconst portableNavBar = document.querySelector(\".nav-portable\");\r\nconst crossBtn = document.querySelector(\".nav-portable-close\");\r\n\r\n// Open portable navbar\r\nnavBtn.addEventListener(\"click\", () => {\r\n    if (!isNavOpen) {\r\n        gsap.to(\".nav-portable\", {\r\n            x: 0,\r\n            duration: 0.6,\r\n            ease: \"expo.out\", \r\n        });\r\n\r\n        gsap.from(\".nav-portable-nav-links a\", {\r\n            x: 500,\r\n            stagger: 0.05,\r\n            ease: \"expo.out\",\r\n            duration: 1.5,\r\n        });\r\n\r\n        isNavOpen = true;\r\n    }\r\n});\r\n\r\n// Close portable navbar\r\ncrossBtn.addEventListener(\"click\", closeNavBar);\r\n\r\ndocument.addEventListener('click', (event) => {\r\n    const isClickInsideNavbar = portableNavBar.contains(event.target);\r\n    const isClickOnToggleButton = navBtn.contains(event.target);\r\n\r\n    if (!isClickInsideNavbar && !isClickOnToggleButton) {\r\n        closeNavBar();\r\n    }\r\n});\r\n\r\nfunction closeNavBar() {\r\n    if (isNavOpen) {\r\n        gsap.to(\".nav-portable\", {\r\n            x: \"400%\",\r\n            duration : 0.3,\r\n            ease: 'expo.in'\r\n        });\r\n\r\n        isNavOpen = false;\r\n    }\r\n}\r\n\r\n// Hover effect on nav-portable button\r\nfunction scaleAnimation(element, scaleTo, duration, ease = \"none\") {\r\n    gsap.to(element, {\r\n        scale: scaleTo,\r\n        duration: duration,\r\n        ease: ease\r\n    });\r\n}\r\n\r\nnavBtn.addEventListener(\"mouseenter\", (event) => {\r\n    scaleAnimation(event.target, 1.2, 0.5);\r\n});\r\n\r\nnavBtn.addEventListener(\"mouseleave\", (event) => {\r\n    scaleAnimation(event.target, 1, 0.5, \"power1.out\");\r\n});\r\n\r\n\r\n// Animating nav button on scroll\r\ngsap.from(\".nav-btn\", {\r\n    scale: 0,\r\n    duration: 0.4,\r\n    scrollTrigger: {\r\n        trigger: \".about-me\",\r\n        start: \"top 50%\",\r\n        toggleActions: \"play none none reverse\",\r\n    }\r\n});\r\n\r\n\r\ngsap.to(\".code-box-animated\", {\r\n    rotation : 180,\r\n    repeat : -1,\r\n    duration : 1,\r\n    repeatDelay : 1\r\n})\r\n\r\n\r\n\r\n// nav full mousehover animation\r\nconst headings = document.querySelectorAll(\".nav-full > div > a\");\r\n\r\nfunction dragHover(headings, intensity, ease, duration, scale) {\r\n    headings.forEach((heading) => {\r\n        heading.addEventListener(\"mouseover\", () => {\r\n            heading.addEventListener(\"mousemove\", onMouseMove);\r\n        });\r\n    \r\n        heading.addEventListener(\"mouseout\", () => {\r\n            heading.removeEventListener(\"mousemove\", onMouseMove);\r\n            gsap.to(heading, {\r\n                x: 0,\r\n                y: 0,\r\n                ease : '',\r\n                scale: scale,\r\n                duration: duration\r\n            });\r\n        });\r\n    });\r\n    \r\n    function onMouseMove(event) {\r\n        const heading = event.target;\r\n        const rect = heading.getBoundingClientRect();\r\n        const offsetX = event.clientX - rect.left - rect.width / 2;\r\n        const offsetY = event.clientY - rect.top - rect.height / 2;\r\n    \r\n        gsap.to(heading, {\r\n            x: offsetX * intensity,\r\n            y: offsetY * intensity,\r\n            ease : ease,\r\n            scale: 1.2,\r\n            duration: duration\r\n        });\r\n    }\r\n};\r\n\r\n\r\ndragHover(headings, 0.7, 'power1.out', 1, 1);\r\ndragHover(moreBtn, 0.6, 'power1.out', 1, 1);\r\n\r\nconst navLinks = document.querySelectorAll(\".nav-portable-nav-links > a\");\r\ndragHover(navLinks, 0.1, 'power1.out', 0.6, 1);\r\n\r\n\r\n\r\n//header\r\n\r\n// header - img reveal animation\r\ngsap.from(\".img-container > img\", {\r\n    y : -500,\r\n    ease : \"expo.out\",\r\n    duration : 1.5,\r\n    delay : 1.7\r\n})\r\n\r\n// header -  text scramble\r\nconst initScrambleEffect = (selector) => {\r\n    const scrambleText = document.querySelector(selector);\r\n    const originalText = scrambleText.innerText;\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    const duration = 0.5;\r\n\r\n    const scramble = (element) => {\r\n        const length = originalText.length;\r\n        const scrambleValue = new Array(length).fill('').map(() => chars[Math.floor(Math.random() * chars.length)]).join('');\r\n\r\n        gsap.to(element, {\r\n            duration: duration,\r\n            text: {\r\n                value: scrambleValue,\r\n                newClass: \"scramble\"\r\n            },\r\n            ease: \"none\",\r\n            onComplete: () => element.innerText = originalText\r\n        });\r\n    };\r\n\r\n    let isScrambling = false;\r\n\r\n    scrambleText.addEventListener('mouseover', () => {\r\n        if (!isScrambling) {\r\n            isScrambling = true;\r\n            scramble(scrambleText);\r\n\r\n            setTimeout(() => {\r\n                isScrambling = false;\r\n            }, duration * 1000);\r\n        }\r\n    });\r\n};\r\n\r\n\r\ninitScrambleEffect('.scramble');\r\ninitScrambleEffect('.scramble-1');\r\ninitScrambleEffect('.scramble-2');\r\n\r\n\r\nfunction textScrambleAnimation(splitText, gsapText, delay) {\r\n    const aboutP = document.querySelector(splitText);\r\n    const aboutText = aboutP.textContent.trim();\r\n    const words = aboutText.split(/\\s+/);\r\n    aboutP.innerHTML = words.map(word => `<span class=\"span-line\"><span>${word} </span></span>`).join(\" \");\r\n\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\r\n    // Function to scramble text\r\n    const scrambleText = (element, duration) => {\r\n        const originalText = element.innerText; // Store original text\r\n        const length = originalText.length;\r\n        const scrambleValue = new Array(length).fill('').map(() => chars[Math.floor(Math.random() * chars.length)]).join('');\r\n\r\n        gsap.to(element, {\r\n            duration: duration,\r\n            text: scrambleValue,\r\n            ease: \"none\",\r\n            delay : delay,\r\n            onComplete: () => {\r\n                gsap.to(element, {\r\n                    duration: 0.5,\r\n                    text: originalText,\r\n                    ease: \"none\"\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    ScrollTrigger.create({\r\n        trigger: splitText,\r\n        start: \"top 80%\", \r\n        end: \"top 20%\",\r\n        onEnter: () => {\r\n            // Scramble each span on scroll\r\n            document.querySelectorAll(gsapText).forEach(span => {\r\n                scrambleText(span, 0.3);\r\n            });\r\n        },\r\n        toggleActions: \"play none none reset\",\r\n    });\r\n}\r\n\r\n// Call the function with the selectors\r\ntextScrambleAnimation(\".about-text\", \".about-text > span > span\", 0);\r\ntextScrambleAnimation(\".skills-text\", \".skills-text > span > span\", 0);\r\ntextScrambleAnimation(\".resume-text\", \".resume-text > span > span\", 0);\r\ntextScrambleAnimation(\".likings-text\", \".likings-text > span > span\", 0);\r\ntextScrambleAnimation(\".header-para-1\", \".header-para-1 > .span-line\", 1);\r\n\r\n\r\n\r\n// pre loader\r\n\r\nconst preLoader = document.querySelector(\".pre-loader\");\r\nconst loaderText = document.querySelector(\".pre-loader-text\");\r\n\r\nwindow.onload = function preLoaderFunc() {\r\n    const loaderContent = [\"ଜୟ ଜଗନ୍ନାଥ\", \"Namoste\", \"こんにちは\", \"नमस्ते\", \"Hola\", \"Hi\"];\r\n    let currentIndex = 0;\r\n\r\n    const intervalId = setInterval(() => {\r\n        loaderText.textContent = loaderContent[currentIndex];\r\n        currentIndex = (currentIndex + 1) % loaderContent.length;\r\n    }, 100);\r\n\r\n    setTimeout(() => {\r\n        clearInterval(intervalId);\r\n\r\n        gsap.to(preLoader, {\r\n            display: \"none\",\r\n            y: \"-100%\",\r\n            ease: \"expo.in\"\r\n        });\r\n        gsap.from(\".header-para\", {\r\n            y: 10,\r\n            opacity: 0,\r\n            ease: \"expo.out\",\r\n            delay: 0.5\r\n        });\r\n    }, 1000);\r\n}\r\n\r\n\r\n// dark and light mode\r\n\r\ngsap.to('#theme-toggle', {\r\n    rotation : 360,\r\n    duration : 1.5,\r\n    repeat : -1,\r\n    ease : \"linear\"\r\n})\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const toggleButton = document.getElementById('theme-toggle');\r\n    \r\n    // Check for saved user preference\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme === 'dark-mode') {\r\n        document.body.classList.add('dark-mode');\r\n    }\r\n\r\n    toggleButton.addEventListener('click', () => {\r\n        if (document.body.classList.contains('dark-mode')) {\r\n            document.body.classList.remove('dark-mode');\r\n            localStorage.setItem('theme', ''); // Remove preference\r\n        } else {\r\n            document.body.classList.add('dark-mode');\r\n            localStorage.setItem('theme', 'dark-mode'); // Save preference\r\n        }\r\n    });\r\n});\r\n\r\n\r\n\r\n\r\n// about part gsap animation\r\n\r\n// Data for images\r\nconst contentData = [\r\n    { imgSrc: \"/Screenshot_20240420_011401.a75d83eb.png\", title : \"TEAMSYNC\", pg : \"01\", index : \"3\" },\r\n    { imgSrc: \"./Screenshot_20240420_061046.81e2a5d3.png\", title : \"CAFFEE\", pg : \"02\" , index : \"4\"},\r\n    { imgSrc: \"./Screenshot_20240421_084352.5c5af00c.png\", title : \"WALDO\", pg : \"03\", index : \"5\" },\r\n];\r\n\r\nlet currentIndex = -1;\r\n\r\n// Function to update the content based on the current index\r\nfunction updateContent(index) {\r\n    const content = contentData[index]\r\n    if (index === currentIndex) return;\r\n    const TitleElem = document.querySelector(\".work-div-1  h3\");\r\n    const pgElem = document.querySelector(\".work-div-1 p\")\r\n    const imgElement = document.querySelector('.work-img-div img');\r\n        // GSAP animation for fading out the old image and fading in the new one\r\n        gsap.to(imgElement, { opacity: 0, duration: 0.3, onComplete: () => {\r\n            imgElement.src = content.imgSrc;\r\n            TitleElem.innerText = content.title;\r\n            pgElem .innerText= `P / ${content.pg}`;\r\n            gsap.to(imgElement, { opacity: 1, duration: 0.6});\r\n        }});\r\n\r\n    currentIndex = index;\r\n}\r\n\r\n// Function to determine device type and set thresholds\r\nfunction getThresholds() {\r\n    const viewportHeight = window.innerHeight;\r\n\r\n    let threshold1, threshold2;\r\n\r\n    if (window.matchMedia(\"(max-width: 767px)\").matches) {\r\n        // Mobile devices\r\n        threshold1 = viewportHeight * 3;\r\n        threshold2 = viewportHeight * 4;\r\n    }else {\r\n        // PCs\r\n        threshold1 = viewportHeight * 3.5;\r\n        threshold2 = viewportHeight * 4;\r\n    }\r\n\r\n    return { threshold1, threshold2 };\r\n}\r\n\r\n// Function to handle scroll events\r\nfunction handleScroll() {\r\n    const scrollY = window.scrollY;\r\n    const { threshold1, threshold2 } = getThresholds();\r\n\r\n    if (scrollY < threshold1) {\r\n        updateContent(0);\r\n    } else if (scrollY >= threshold1 && scrollY < threshold2) {\r\n        updateContent(1);\r\n    } else if (scrollY >= threshold2) {\r\n        updateContent(2);\r\n    }\r\n}\r\n\r\n// Initial call to handleScroll to set the correct content based on initial scroll position\r\nwindow.addEventListener(\"load\", handleScroll);\r\n\r\n// Adding event listener for scroll\r\nwindow.addEventListener(\"scroll\", handleScroll);\r\n\r\nScrollTrigger.create({\r\n    trigger: \"#work\",\r\n    start: \"top top\",\r\n    end: () => \"+=\" + window.innerHeight * 3,\r\n    pin: true,\r\n    scrub : true,\r\n});\r\n\r\n// Handle resizing for responsive adjustments\r\nwindow.addEventListener(\"resize\", () => {\r\n    ScrollTrigger.refresh();\r\n});\r\n\r\n\r\ngsap.to(\".work-scroll-bar\", {\r\n    x : 0,\r\n    scrollTrigger : {\r\n        trigger : \"#work\",\r\n        start : \"top top\",\r\n        end: () => \"+=\" + window.innerHeight * 3,\r\n        scrub : 2\r\n    }\r\n});\r\n\r\n\r\nfunction revealAnimation(elem, triggerEl) {\r\n    gsap.from(elem, {\r\n        opacity : 0,\r\n        y : 100,\r\n        duration: 1,\r\n        scrollTrigger : {\r\n            trigger : triggerEl,\r\n            start : \"top 80%\",\r\n            end : \"top 20%\",\r\n            scrub : 1\r\n        }\r\n    })\r\n};\r\n\r\n\r\nrevealAnimation(\".about-div\", \"#about\");\r\n\r\n\r\ngsap.from(\".final-section-quote\", {\r\n    scale : 1.5,\r\n    opacity: 0,\r\n    scrollTrigger : {\r\n        trigger : \".final-section\",\r\n        start : \"top 70%\",\r\n        scrub : 1,\r\n    }\r\n});\r\n\r\ngsap.from(\".final-section-gallery\", {\r\n    y : 300,\r\n    scrollTrigger : {\r\n        trigger : \".final-section-quote\",\r\n        start : \"top 50%\",\r\n        end : \"top 20%\",\r\n        scrub : 1,\r\n    }\r\n});\r\n\r\n\r\nconst galleryTimeline = gsap.timeline({\r\n    scrollTrigger: {\r\n        trigger: \".final-section-gallery\",\r\n        start: \"top bottom\",\r\n        scrub: 1\r\n    }\r\n});\r\n\r\ngalleryTimeline\r\n    .to(\".gallery-1\", { x: -150 }, 0)\r\n    .from(\".gallery-2\", { x: -150 }, 0);\r\n\r\n\r\n// Animating more work button on scroll\r\ngsap.from(\".more-projects-div > button\", {\r\n    scale: 0,\r\n    duration: 0.4,\r\n    scrollTrigger: {\r\n        trigger: \".more-projects-div\",\r\n        start: \"top 50%\",\r\n        toggleActions: \"play none none reverse\",\r\n    }\r\n});\r\n\r\n\r\nconst workTimeline = gsap.timeline({\r\n    scrollTrigger : {\r\n        trigger : \".work-div\",\r\n        start : \"top 80%\",\r\n        end : \"top 20%\",\r\n        toggleActions: \"play none none reverse\",\r\n    }\r\n})\r\n\r\nworkTimeline\r\n    .from(\".work-div-1 > div > h3\", {opacity : 0, y : 100})\r\n    .from(\".work-div-2-txts > p:first-child\", {opacity : 0, y : 100})"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}